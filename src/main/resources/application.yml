---
server:
  port: 8881
spring:
  application:
    name: app2-development-prototype-microservice
#  autoconfigure:
#    exclude:
#      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  security:
    oauth2:
      resourceserver:
        jwt:
          #issuer-uri: ${authorization.server.issuer-uri}
          jwk-set-uri: ${authorization.server.jwk-set-uri}
cors:
  allowedOrigins: [http://localhost:8881, https://localhost:8881, https://editor.swagger.io]
  allowedMethods: [GET, POST, PUT, DELETE, OPTIONS]
  allowedHeaders: [Origin, Authorization, Content-Type]
## configuration for spring actuator
management:
  endpoints:
    enabled-by-default: true # set to false to disable all endpoints
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    distribution:
      percentiles-histogram: # Whether meter IDs with following name should publish percentile histograms
        http:
          server:
            requests: 'true' # enabling this to generate histogram metrics for http request
    tags: # adds tag to each prometheus metric
      application: app2-microservice
      #application_name: app2-microservice #
#  observations:
#    key-values:
#      application: fraud-detection
logging:
  level:
    org:
      springframework:
        boot.autoconfigure: WARN
        security: WARN
# custom properties
authorization:
  server:
    #issuer-uri: https://zitadel.dev.local #for keycloak use http://<keycloak-host>/realms/<your-realm>
    jwk-set-uri: http://zitadel.dev.local/oauth/v2/keys #for keycloak use http://<keycloak-host>/realms/<your-realm>/protocol/openid-connect/certs