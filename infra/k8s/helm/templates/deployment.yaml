---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
    version: 0.0.1-SNAPSHOT
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/version: 0.0.1-SNAPSHOT
  name: {{ .Release.Name }}-app
spec:
  replicas: 1
  #revisionHistoryLimit: 2 #number of old ReplicaSets (deployments' revisions) to retain
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        version: 0.0.1-SNAPSHOT
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/version: 0.0.1-SNAPSHOT
      #name: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}-container
          image: kannan2024/app2-development-prototype-microservice:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8881
              scheme: HTTP
            initialDelaySeconds: 180
            successThreshold: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8881
              scheme: HTTP
            initialDelaySeconds: 10
            successThreshold: 1
          securityContext:
            privileged: false
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      imagePullSecrets:
        - name: docker-registry-secret